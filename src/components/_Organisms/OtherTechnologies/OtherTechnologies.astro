---
import { getCollection, getEntryBySlug } from "astro:content";
import Technologies from "@components/Technologies.astro";
import AppearingLine from "@components/AppearingText/AppearingLine.astro";
import sortTechnologies from "@utils/sortTechnologies";
import partition from "lodash/partition";
import chunk from "lodash/chunk";

const projects = await getCollection("projects");
const usedTechnologies = projects.flatMap(({ data }) => {
	const { technologies } = data;
	return technologies?.map(({ slug }) => slug) || [];
});

const unusedTechCollection = await getCollection(
	"technologies",
	({ slug }) => !usedTechnologies.includes(slug)
);

const technologies = sortTechnologies(
	await Promise.all(
		unusedTechCollection.map(({ slug }) => getEntryBySlug("technologies", slug))
	)
);

const techsArr = partition(
	technologies,
	({ data }) => data.importance < 10
).flatMap((arr) => chunk(arr, 4));

const stagger = 20;

const rightToLeft = (i: number) =>
	JSON.stringify({ transform: [`${100 + stagger * i}%`, `-${100 + stagger * i}%`].map(x=>`translateX(${x})`) });
---

{
	!!technologies.length && (
		<scroll-reference
			data-scroll-feature-refs
			class="section block relative overflow-hidden max-w-full"
		>
			<article
				class="w-full glass-backdrop pt-4 pb-6 text-center"
				data-scroll-target-ref
			>
				<div
					class="w-full"
					data-scroll-target
					data-scroll-target-keyframes={rightToLeft(0)}
				>
					<AppearingLine
						as="h2"
						text="Other skills"
						class="text-subtitle-2 mb-4 mx-auto"
					/>
				</div>
				<section class="flex flex-col gap-4">
					{techsArr.map((tech, i) => {
						return (
							<div
								class="w-full"
								data-scroll-target
								data-scroll-target-keyframes={rightToLeft((i % 2) + 1)}
							>
								<Technologies
									entries={tech}
									defaultColor="white"
									class="justify-center mx-auto"
								/>
							</div>
						);
					})}
				</section>
			</article>
		</scroll-reference>
	)
}