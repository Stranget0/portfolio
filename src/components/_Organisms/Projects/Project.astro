---
import SectionFloatingImages from "@components/SlidedSection/_SectionFloatingImages.astro";
import SectionFullscreenImages from "@components/SlidedSection/_SectionFullscreenImages.astro";
import SectionItem from "@components/SlidedSection/_SectionItem.astro";
import SectionItemDescription from "@components/SlidedSection/_SectionItemDescription.astro";
import SectionItemTitle from "@components/SlidedSection/_SectionItemTitle.astro";
import { getEntry, type CollectionEntry } from "astro:content";
import SectionFloatingImagesReferences from "@components/SlidedSection/_SectionFloatingImagesReferences.astro";
import SectionLinks from "@components/SlidedSection/_SectionLinks.astro";
import SectionHeading from "@components/SlidedSection/_SectionHeading.astro";
import SectionYear from "@components/SlidedSection/_SectionYear.astro";
import { forceFocusViewAttrObj } from "@plugins/forceFocusView/constants";
import { preloadImagesInContainer } from "@plugins/preloadImagesInContainer/serverUtils";
import AppearingTextButton from "@/components/AppearingText/AppearingTextButton";
import { scrollVelocityTransform } from "@plugins/scrollVelocityTransform/serverUtils";
import SectionTopSticky from "@/components/SlidedSection/_SectionTopSticky.astro";

interface Props {
	frontmatter: CollectionEntry<"projects">;
}

const { frontmatter } = Astro.props;
const { data, render, slug } = frontmatter;
const {
	fullscreenImages,
	floatingImages,
	title,
	description: _description,
	transcript: projectTranscript,
	startYear,
	endYear,
	class: className = "bg-primary-50 color-var-primary-900",
	titleClass,
	github,
	website,
} = data;

const transcript =
	projectTranscript &&
	(await getEntry(projectTranscript.collection, projectTranscript.id));

const hasFullscreenImages = !!fullscreenImages?.length;
const hasFloatingImages = !!floatingImages?.length;

const stageId = transcript?.id.split("/")[1];

const { Content } = await render();
---

<SectionItem
	id={slug}
	class={className}
	{...preloadImagesInContainer}
	{...forceFocusViewAttrObj}
>
	{
		title && (
			<SectionTopSticky>
				<SectionItemTitle
					title={title}
					class={titleClass}
					href={website || github}
				/>
			</SectionTopSticky>
		)
	}
	{
		stageId && (
			<AppearingTextButton
				client:visible
				stageId={stageId}
				class="mx-auto"
				data-scroll-target-keyframes={JSON.stringify({
					opacity: [0, 0, 1, 1, 1, 1, 0, 0],
				})}
				data-scroll-target
				data-scroll-target-ref
			/>
		)
	}
	<SectionItemDescription id={stageId} transcript={transcript}>
		<SectionYear startYear={startYear} endYear={endYear} />
		<Content
			components={{
				h1: SectionHeading,
			}}
		/>
	</SectionItemDescription>

	{
		hasFullscreenImages && (
			<SectionFullscreenImages
				images={fullscreenImages}
				floatingImages={floatingImages}
			/>
		)
	}
	{hasFloatingImages && <SectionFloatingImages images={floatingImages} />}
	{
		hasFloatingImages && (
			<SectionFloatingImagesReferences images={floatingImages} />
		)
	}

	<div class="fixed bottom-4" {...scrollVelocityTransform(5)}>
		<SectionLinks github={github} class="w-full" />
	</div>
</SectionItem>

<script>
	import importInView from "@utils/importInView/importInView";
	importInView("scroll-reference", () =>
		import("@components/_CustomElements/ScrollReference"),
	);
</script>
