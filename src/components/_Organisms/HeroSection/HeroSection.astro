---
import AppearingLine from "@components/AppearingText/AppearingLine.astro";
import SectionClip from "../../SectionClip.astro";
import SectionFixed from "../../SectionFixed.astro";
import MouseIcon from "@components/MouseIcon.astro";
import waypoints from "@components/ThreeScene/modules/waypoints/waypointsServerApi";
import { classInView } from "@/plugins/classInView/serverUtils";
import {
	classOnFoxLoading,
	classOnFoxLoaded,
} from "@components/ThreeScene/serverUtils";
import { getCollection } from "astro:content";

import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import { mainpageTabs } from "@/constants";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const projects = await getCollection("projects", ({ slug }) =>
	slug.startsWith(lang),
);
const technologies = await getCollection(
	"technologies",
	({ data }) => data.importance < 10,
);

const spinnedTexts = [
	t("info.projects", [projects.length]),
	t("info.experience"),
	t("info.design"),
	t("info.technologies", [technologies.length]),
];

const appearInView = classInView("opacity-0 scale-0", "opacity-100 scale-100");
const appearOnFoxLoaded = classOnFoxLoaded("important:(opacity-100 scale-100)");

const disappearOnFoxLoading = {
	...classOnFoxLoading("important:(opacity-0 scale-0)"),
	...classOnFoxLoaded("hidden"),
};
const removeOnFoxLoaded = classOnFoxLoaded("hidden");
---

<SectionClip
	id={mainpageTabs.hero.id}
	as="section"
	class="section h-120vh min-h-md text-center"
	data-static-h="120vh"
	{...waypoints.foxWaypointCameraSpatial(3.316, 1.264, -0.321).waypoint()}
	{...waypoints.foxWaypointTarget(0.5, -0.3, -1).waypoint()}
	{...waypoints.foxWaypointStiffness(1, 1).waypoint()}
>
	<div
		class="fox-bg fixed flex-col-center inset-0 h-100svh z-2 text-primary-100 bg-primary-50"
		{...removeOnFoxLoaded}
	>
		<div class="menu-opafocus">
			<AppearingLine
				as="h1"
				class="w-min text-subtitle-1 solid-text-shadow mix-blend-difference menu-opafocus-option"
				text={t("titles.loader")}
				lettersTransition
			/>
			{
				spinnedTexts.map((text, i, { length }) => {
					const deg = ((i - 0.15) / (length - 1)) * 200;
					return (
						<div
							class="hidden sm:block menu-opafocus-option transform-origin-l text-subtitle-4 solid-text-shadow text-5 opacity-50 font-serif absolute -translate-50% mix-blend-difference"
							style={{
								left: `calc(50% + min(200px, 25vmin) * cos(${deg}deg))`,
								top: `calc(50% + min(200px, 25vmin) * sin(${deg}deg))`,
							}}
						>
							<p
								class="motion-safe:animate-bounce-in important:animate-fill-both"
								style={{
									"animation-delay": `${(length - i) * 150}ms`,
								}}
							>
								{text}
							</p>
						</div>
					);
				})
			}
		</div>
	</div>

	<div
		{...disappearOnFoxLoading}
		class="mix-blend-difference flex-col-center text-primary-50 z-100 sticky mx-auto top-96% -translate-y-full"
	>
		<MouseIcon class="w-6 h-6 motion-safe:animate-bounce" />
		<p class="text-label motion-safe:animate-bounce">{t("common.scroll")}</p>
	</div>

	<SectionFixed
		as="p"
		class="absolute inset-0 h-screen important:h-100svh flex flex-col justify-between py-8"
	>
		<span
			class="flex-col-center motion-safe:transition-600 important:(opacity-0 scale-0)"
			{...appearInView}
			{...appearOnFoxLoaded}
			aria-hidden="true"
		>
			<AppearingLine
				as="span"
				class="text-title-1 solid-text-shadow motion-safe:transition-600 motion-safe:animate-appear"
				text={t("titles.3d.0")}
				lettersTransition
				{...appearInView}
			/>

			<AppearingLine
				as="span"
				class="text-title-2 solid-text-shadow motion-safe:transition-600 motion-safe:animate-appear important:(animate-duration-600)"
				text={t("titles.3d.1")}
				lettersTransition
				{...appearInView}
			/>
		</span>
		<span
			class="flex-col-center motion-safe:transition-600 important:(opacity-0 scale-0)"
			{...appearInView}
			{...appearOnFoxLoaded}
			aria-hidden="true"
		>
			<AppearingLine
				as="span"
				class="text-title-2 solid-text-shadow motion-safe:transition-600 motion-safe:animate-appear important:(animate-duration-600)"
				text={t("titles.3d.2")}
				lettersTransition
				{...appearInView}
			/>
			<AppearingLine
				as="span"
				class="text-title-1 solid-text-shadow motion-safe:transition-600 motion-safe:animate-appear"
				text={t("titles.3d.3")}
				lettersTransition
				{...appearInView}
			/>
		</span>
	</SectionFixed>
</SectionClip>
<style lang="scss">
	.fox-bg {
		@apply bg-no-repeat bg-center;
		background-image: url("/svg/fox-no-bg.svg");
		background-size: min(20rem, 50vmin);
	}
</style>
