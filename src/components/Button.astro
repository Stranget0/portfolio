---
import type { Polymorphic } from "astro/types";
import AppearingText from "./AppearingText/AppearingText.astro";
import AppearingLine from "./AppearingText/AppearingLine.astro";

type Conditional =
	| {
			wordTimings?: never;
			text?: never;
			// eslint-disable-next-line no-mixed-spaces-and-tabs
	  }
	| {
			wordTimings: number[];
			text: string;
			// eslint-disable-next-line no-mixed-spaces-and-tabs
	  };

type Props<T extends "button" | "a"> = Polymorphic<{ as: T }> & {
	visualType?: "simple" | "outline";
	size?: "default" | "small";
} & Conditional;

const {
	visualType = "simple",
	class: className,
	wordTimings,
	text,
	as: Tag = "button",
	size = "default",
	...rest
} = Astro.props;
---

<Tag
	class:list={[
		"rounded relative outline-offset-4 transition-interactive w-full border-current no-underline disabled:(opacity-30 scale-100 bg-primary-500)",
		size === "default" && "p-4 text-button",
		size === "small" && "px-2 py-1 text-xs",
		visualType === "simple" &&
			"bg-primary-100 text-primary-950 hover:bg-accent-50",
		visualType === "outline" && "border-2",
		className,
	]}
	{...rest}
>
	{
		wordTimings ? (
			<AppearingText as="span" class="flex-center gap-2" wordTimings={wordTimings}>
				<slot name="before"/>
				<AppearingLine as="span" text={text} />
				<slot name="after"/>
			</AppearingText>
		) : (
			<slot>LOREM IPSUM NIHIL NOVI</slot>
		)
	}
</Tag>
