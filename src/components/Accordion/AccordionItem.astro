---
/* eslint-disable astro/no-unused-css-selector */
// Disable eslint for css selectors, as some selectors are used in other components
import { Image } from "@astrojs/image/components";

interface Props {
	background: string;
	chips?: { label: string; className?: string }[];
}
export type AccordionItemProps = Props;

const { background, chips } = Astro.props;
---

<li
	class="accordion-panel flex-basis-30 @container motion-safe:duration-150 ease-out before:rounded-45 py-2 dash-primary-50 transition-interactive"
>
	<div class="relative w-full h-full">
		<button
			class="accordion-trigger absolute inset-0 w-full rounded items-center menu-opafocus-option opafocus-max-opacity-75 opafocus-min-opacity-50 outline-offset-8"
			flex="~ col"
			aria-controls="ACCORDION-ID"
			aria-expanded="false"
		>
			<h2 class="accordion-title text-16 font-100" id="ACCORDION-HEADING">
				<span>Title</span>
			</h2>
			<p
				class="accordion-content p-4 my-auto font-100 motion-safe:duration-150 ease-out"
				id="ACCORDION-ID"
				aria-labelledby="ACCORDION-HEADING"
				aria-hidden="true"
				role="region"
			>
				<slot>-</slot>
			</p>
			<div
				class="accordion-chips mb-4 flex items-center gap-2 motion-safe:duration-150 opacity-75 pointer-events-none"
			>
				{
					chips?.map(({ label, className }) => {
						return (
							<strong class:list={["p-1 rounded", className]}>{label}</strong>
						);
					})
				}
			</div>
			<div
				class="accordion-bg rounded-xl overflow-hidden absolute inset-0 -z-1 motion-safe:transition-filter motion-safe:duration-300"
			>
				<Image src={background} alt="" width={1152} height={400} fit="cover" />
			</div>
		</button>
	</div>
</li>

<style lang="scss">
	.accordion-bg > img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
	.accordion-content,
	.accordion-chips {
		opacity: 0;
		transform: translateY(10rem);
		transition-property: opacity, transform;
	}

	@container (width < 20rem) {
		.accordion-title {
			opacity: 0;

			@media (prefers-reduced-motion: no-preference) {
				transition: opacity 150ms cubic-bezier(0, 0, 0.2, 1);
			}

			.expanded & {
				opacity: 1;
				transition-delay: 150ms;
			}
		}
	}

	.accordion-panel {
		transition-property: flex-basis, flex-grow, transform;

		&.expanded {
			@apply dash-both flex-grow flex-basis-100%;
			transform: scale(1);
			opacity: 1;

			flex-grow: 1;

			.accordion-trigger {
				opacity: 1;
			}
			.accordion-bg {
				filter: brightness(0.5);
			}

			.accordion-content,
			.accordion-chips {
				opacity: 1;
				transform: none;
				transition-delay: 150ms;
			}
			.accordion-chips {
				opacity: 0.5;
			}
		}
	}
</style>
