---
/* eslint-disable astro/no-unused-css-selector */
// Disable eslint for css selectors, as some selectors are used in other components
import { Image } from "@astrojs/image/components";
import Chip from "@components/Chip.astro";
import { generateUUID } from "three/src/math/MathUtils.js";

interface Props {
	background: string;
	chips?: { label: string; className?: string }[];
	title?: string;
	class?: string;
}
export type AccordionItemProps = Props;

const { background, chips, title, class: className } = Astro.props;
const id = generateUUID();
const titleId = `heading-${id}` 
---

<li class:list={["accordion-panel", className]}>
	<div class="relative w-full h-full">
		<button
			class="accordion-trigger flex flex-col menu-opafocus-option opafocus-max-opacity-75 opafocus-min-opacity-50"
			aria-controls={id}
			aria-expanded="false"
		>
			{
				title && (
					<h2 class="accordion-title" id={titleId}>
						{title}
					</h2>
				)
			}
			<p
				class="accordion-content"
				id={id}
				aria-labelledby={title && titleId}
				aria-hidden="true"
				role="region"
			>
				<slot />
			</p>
			{
				chips && (
					<ul class="accordion-chips">
						{chips?.map(({ label, className }) => (
							<Chip class={className}>{label}</Chip>
						))}
					</ul>
				)
			}
			<div
				class="accordion-bg rounded-xl overflow-hidden absolute inset-0 -z-1 motion-safe:transition-filter motion-safe:duration-300"
			>
				<Image src={background} alt="" width={1152} height={400} fit="cover" />
			</div>
		</button>
	</div>
</li>

<style lang="scss">
	:where(.accordion-panel) {
		@apply flex-basis-30 relative @container motion-safe:duration-150 ease-out py-2 transition-interactive before:pseudo-full;
	}
	:where(.accordion-trigger) {
		@apply absolute inset-0 w-full rounded items-center outline-offset-8;
	}
	:where(.accordion-content) {
		@apply p-4 my-auto font-100 motion-safe:duration-150 ease-out;
	}
	:where(.accordion-title) {
		@apply text-subtitle-2;
	}
	:where(.accordion-chips) {
		@apply mb-4 flex items-center gap-2 motion-safe:duration-150 opacity-75 pointer-events-none;
	}
	.accordion-bg > img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
	.accordion-content,
	.accordion-chips {
		opacity: 0;
		transform: translateY(10rem);
		transition-property: opacity, transform;
	}

	@container (width < 20rem) {
		.accordion-title {
			opacity: 0;

			@media (prefers-reduced-motion: no-preference) {
				transition: opacity 150ms cubic-bezier(0, 0, 0.2, 1);
			}

			.expanded & {
				opacity: 1;
				transition-delay: 150ms;
			}
		}
	}
	.accordion-panel {
		transition-property: flex-basis, flex-grow, transform;

		&.expanded {
			@apply before:dash-both flex-grow flex-basis-100%;
			transform: scale(1);
			opacity: 1;

			flex-grow: 1;

			.accordion-trigger {
				opacity: 1;
			}
			.accordion-bg {
				filter: brightness(0.5);
			}

			.accordion-content,
			.accordion-chips {
				opacity: 1;
				transform: none;
				transition-delay: 150ms;
			}
			.accordion-chips {
				opacity: 0.5;
			}
		}
	}
</style>
