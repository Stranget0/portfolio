---
import type { HTMLTag, Polymorphic } from "astro/types";
import { playAudioContainerTooltip } from "./serverUtils";
import type { CollectionEntry } from "astro:content";
import transcriptDataToTimestamps from "@/utils/transcriptDataToTimestamps";
import { isDev } from "@/constants";

type Props<T extends HTMLTag> = Polymorphic<{ as: T }> & {
	transcript: CollectionEntry<"transcripts"> | undefined;
	id: string | undefined;
	scrollPosition?: ScrollLogicalPosition;
	noTooltip?: boolean;
	isDebug?: boolean;
};

const {
	as: Tag = "p",
	transcript,
	isDebug = isDev,
	noTooltip,
	scrollPosition,
	...other
} = Astro.props as Props<HTMLTag>;

const audioPath = transcript?.data.audio;

const { timestamps = [], words = [] } =
	(transcript && transcriptDataToTimestamps(transcript.data)) || {};

const tooltipData =
	!noTooltip && audioPath && timestamps.length > 0 && playAudioContainerTooltip;
---

<!-- TODO: Fix typing error -->
<Tag
	{...other as any}
	{...tooltipData}
	data-audio-timings={timestamps}
	data-audio-reference={isDebug ? words : undefined}
	data-audio-path={audioPath}
	data-audio-scroll={scrollPosition}
	data-debug={isDebug}
>
	<slot />
</Tag>
